# Generated by Django 5.2.7 on 2025-10-15 22:50

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('exercises', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PersonalRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_type', models.CharField(choices=[('1RM', 'One Rep Max'), ('REPS', 'More reps at a given weight'), ('WEIGHT', 'Heaviest weight lifted for a given exercise'), ('VOLUME', 'Max Volume')], max_length=6)),
                ('weight_kg', models.FloatField()),
                ('reps', models.PositiveIntegerField()),
                ('volume', models.FloatField(blank=True, help_text='weight * reps', null=True)),
                ('estimated_1rm', models.FloatField(blank=True, null=True)),
                ('achieved_at', models.DateField()),
                ('previous_value', models.FloatField(blank=True, null=True)),
                ('improvement_percent', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='personal_records', to='exercises.exercise')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='personal_records', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProgressPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo_type', models.CharField(choices=[('FT', 'Front'), ('Sd', 'Side'), ('BK', 'Back')], max_length=5)),
                ('image', models.ImageField(upload_to='progress_photos/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_photos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BodyMeasurement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('weight_kg', models.FloatField(blank=True, null=True)),
                ('body_fat_percent', models.FloatField(blank=True, null=True)),
                ('muscle_mass_kg', models.FloatField(blank=True, null=True)),
                ('neck_cm', models.FloatField(blank=True, null=True)),
                ('chest_cm', models.FloatField(blank=True, null=True)),
                ('waist_cm', models.FloatField(blank=True, null=True)),
                ('hips_cm', models.FloatField(blank=True, null=True)),
                ('bicep_left_cm', models.FloatField(blank=True, null=True)),
                ('bicep_right_cm', models.FloatField(blank=True, null=True)),
                ('forearm_left_cm', models.FloatField(blank=True, null=True)),
                ('forearm_right_cm', models.FloatField(blank=True, null=True)),
                ('thigh_left_cm', models.FloatField(blank=True, null=True)),
                ('thigh_right_cm', models.FloatField(blank=True, null=True)),
                ('calf_left_cm', models.FloatField(blank=True, null=True)),
                ('calf_right_cm', models.FloatField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_records', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('user', 'date')},
            },
        ),
    ]
